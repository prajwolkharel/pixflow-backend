generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  password     String
  role         Role
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  assignedTasks Task[]   @relation("AssignedTo")
  createdTasks  Task[]   @relation("AssignedBy")
  feedbacks     Feedback[] @relation("FeedbackBy")
}

model Task {
  id           String      @id @default(uuid())
  title        String
  description  String      @default("") // Required, default to empty string
  priority     Priority    @default(MEDIUM)
  assignDate   DateTime    @default(now())
  dueDate      DateTime    @default(now()) // Required, default to now
  status       TaskStatus  @default(TO_DO)
  startDate    DateTime?   // Nullable
  completeDate DateTime?   // Nullable
  client       String      @default("") // Required, default to empty string
  isApproved   Boolean     @default(false)
  assignedToId String
  assignedTo   User        @relation("AssignedTo", fields: [assignedToId], references: [id])
  assignedById String
  assignedBy   User        @relation("AssignedBy", fields: [assignedById], references: [id])
  feedbacks    Feedback[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Feedback {
  id           String        @id @default(uuid())
  taskId       String
  task         Task          @relation(fields: [taskId], references: [id])
  feedback     String
  status       FeedbackStatus @default(PENDING)
  createdById  String
  createdBy    User          @relation("FeedbackBy", fields: [createdById], references: [id])
  createdAt    DateTime      @default(now())
}

enum Role {
  ADMIN
  MANAGER
  EMPLOYEE
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum TaskStatus {
  TO_DO
  IN_PROGRESS
  SUBMITTED
  IN_REVIEW
  COMPLETED
}

enum FeedbackStatus {
  PENDING
  ADDRESSED
  APPROVED
}